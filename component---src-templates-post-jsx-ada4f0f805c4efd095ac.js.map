{"version":3,"sources":["webpack:///./config/site.js","webpack:///./src/templates/post.jsx"],"names":["module","exports","pathPrefix","title","titleAlt","description","url","siteUrl","siteLanguage","logo","banner","favicon","shortName","author","themeColor","backgroundColor","twitter","SuggestionBar","props","theme","colors","white","light","shadow","suggestion","PostSuggestion","black","base","primary","transitions","default","transition","Post","data","pageContext","next","prev","markdownRemark","html","frontmatter","excerpt","date","tags","path","image","cover","childImageSharp","fluid","config","pathname","article","input","list","to"],"mappings":"6EAAAA,EAAOC,QAAU,CACfC,WAAY,IACZC,MAAO,mBACPC,SAAU,mBACVC,YAAa,wDACbC,IAAK,4BACLC,QAAS,2BACTC,aAAc,KACdC,KAAM,uBACNC,OAAQ,yBAERC,QAAS,0BACTC,UAAW,WACXC,OAAQ,UACRC,WAAY,UACZC,gBAAiB,UACjBC,QAAS,c,wJCPLC,EAAa,+IAIH,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,MAAMC,QAJ/B,gBAKH,SAAAJ,GAAK,OAAIA,EAAMC,MAAMI,OAAOC,aALzB,KAObC,EAAc,mLAKP,SAAAP,GAAK,OAAIA,EAAMC,MAAMC,OAAOM,MAAMC,OAL3B,+BAMa,SAAAT,GAAK,OAAIA,EAAMC,MAAMC,OAAOQ,QAAQD,OANjD,6BAOW,SAAAT,GAAK,OAAIA,EAAMC,MAAMC,OAAOQ,QAAQD,OAP/C,gBAQF,SAAAT,GAAK,OAAIA,EAAMC,MAAMU,YAAYC,QAAQC,aARvC,yFAcA,SAAAb,GAAK,OAAIA,EAAMC,MAAMC,OAAOQ,QAAQD,OAdpC,WAeL,SAAAT,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,MAAMC,QAf7B,iDAkELU,UA1CF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACZC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KADwB,EAECH,EAAKI,eAApCC,EAF8B,EAE9BA,KAAMC,EAFwB,EAExBA,YAAaC,EAFW,EAEXA,QACnBC,EAAyCF,EAAzCE,KAAMtC,EAAmCoC,EAAnCpC,MAAOuC,EAA4BH,EAA5BG,KAAMC,EAAsBJ,EAAtBI,KAAMtC,EAAgBkC,EAAhBlC,YAC3BuC,EAAQL,EAAYM,MAAMC,gBAAgBC,MAEhD,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CACE5C,MAAU6C,IAAO7C,MAAZ,MAAuBA,EAC5BE,YAAaA,GAAemC,GAAW,IACvC9B,OAAQkC,EACRK,SAAUN,EACVO,SAAO,IAET,YAAC,IAAD,CAAQ/C,MAAOA,EAAOsC,KAAMA,EAAMI,MAAOD,IACzC,YAAC,IAAD,KACE,YAAC,IAAD,CAASO,MAAOb,IAChB,YAAC,IAAD,CAAWc,KAAMV,GAAQ,MAE3B,YAACzB,EAAD,KACE,YAACQ,EAAD,KACGW,GACC,YAAC,OAAD,CAAMiB,GAAIjB,EAAKG,YAAYI,MAA3B,WAEE,sBAAKP,EAAKG,YAAYpC,SAI5B,YAACsB,EAAD,KACGU,GACC,YAAC,OAAD,CAAMkB,GAAIlB,EAAKI,YAAYI,MAA3B,OAEE,sBAAKR,EAAKI,YAAYpC","file":"component---src-templates-post-jsx-ada4f0f805c4efd095ac.js","sourcesContent":["module.exports = {\n  pathPrefix: '/', // Prefix for all links. If you deploy your site to example.com/portfolio your pathPrefix should be \"portfolio\"\n  title: 'Bloomsol Pty Ltd', // Navigation and Site Title\n  titleAlt: 'Bloomsol Pty Ltd', // Title for JSONLD\n  description: 'We are a software consultancy firm based in Australia',\n  url: 'https://www.bloomsol.com/', // Domain of your site. No trailing slash!\n  siteUrl: 'https://www.bloomsol.com', // url + pathPrefix\n  siteLanguage: 'en', // Language Tag on <html> element\n  logo: 'static/logo/logo.png', // Used for SEO\n  banner: 'static/logo/banner.png',\n  // JSONLD / Manifest\n  favicon: 'static/logo/favicon.png', // Used for manifest favicon generation\n  shortName: 'Bloomsol', // shortname for manifest. MUST be shorter than 12 characters\n  author: 'Kalpana', // Author for schemaORGJSONLD\n  themeColor: '#3e7bf2',\n  backgroundColor: '#d3e0ff',\n  twitter: '@madkalps', // Twitter Username\n};\n","import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport { Layout, Container, Content } from 'layouts';\nimport { TagsBlock, Header, SEO } from 'components';\nimport '../styles/prism';\nimport config from '../../config/site';\n\nconst SuggestionBar = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  background: ${props => props.theme.colors.white.light};\n  box-shadow: ${props => props.theme.shadow.suggestion};\n`;\nconst PostSuggestion = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 1rem 3rem 0 3rem;\n  a:not(.gatsby-resp-image-link):not(.anchor) {\n    color: ${props => props.theme.colors.black.base};\n    box-shadow: inset 0 -2px 0 ${props => props.theme.colors.primary.base};\n    border-bottom: 1px solid ${props => props.theme.colors.primary.base};\n    transition: ${props => props.theme.transitions.default.transition};\n    text-decoration: none;\n    padding: 0 0.5rem;\n    margin-bottom: 1rem;\n    &:hover,\n    &:focus {\n      background: ${props => props.theme.colors.primary.base};\n      color: ${props => props.theme.colors.white.light};\n    }\n    h3 {\n      font-size: 1.2rem;\n      margin-bottom: 0.5rem;\n    }\n  }\n`;\n\nconst Post = ({ data, pageContext }) => {\n  const { next, prev } = pageContext;\n  const { html, frontmatter, excerpt } = data.markdownRemark;\n  const { date, title, tags, path, description } = frontmatter;\n  const image = frontmatter.cover.childImageSharp.fluid;\n\n  return (\n    <Layout>\n      <SEO\n        title={`${config.title} | ${title}`}\n        description={description || excerpt || ' '}\n        banner={image}\n        pathname={path}\n        article\n      />\n      <Header title={title} date={date} cover={image} />\n      <Container>\n        <Content input={html} />\n        <TagsBlock list={tags || []} />\n      </Container>\n      <SuggestionBar>\n        <PostSuggestion>\n          {prev && (\n            <Link to={prev.frontmatter.path}>\n              Previous\n              <h3>{prev.frontmatter.title}</h3>\n            </Link>\n          )}\n        </PostSuggestion>\n        <PostSuggestion>\n          {next && (\n            <Link to={next.frontmatter.path}>\n              Next\n              <h3>{next.frontmatter.title}</h3>\n            </Link>\n          )}\n        </PostSuggestion>\n      </SuggestionBar>\n    </Layout>\n  );\n};\n\nexport default Post;\n\nPost.propTypes = {\n  pageContext: PropTypes.shape({\n    prev: PropTypes.object,\n    next: PropTypes.object,\n  }).isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport const query = graphql`\n  query($pathSlug: String!) {\n    markdownRemark(frontmatter: { path: { eq: $pathSlug } }) {\n      html\n      frontmatter {\n        date(formatString: \"Do MMMM, YYYY\")\n        title\n        tags\n        cover {\n          childImageSharp {\n            fluid(\n              maxWidth: 1920\n              quality: 90\n              duotone: { highlight: \"#386eee\", shadow: \"#2323be\", opacity: 60 }\n            ) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n            resize(width: 1200, quality: 90) {\n              src\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}